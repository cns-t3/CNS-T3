name: FYP CD Pipeline

on:
  push:
    branches:
      - "feature/*"
#   workflow_run:
#     workflows: [FYP CI Pipeline]
#     types:
#       - completed
#     branches: [main]

jobs:
  build_and_push_images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Get Current Timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y%m%d%H%M%S')"
      
      - name: Set Timestamp Environment Variable
        run: |
          echo "TIMESTAMP=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      # - name: Login to Azure Container Registry
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: CNSt3.azurecr.io
      #     username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
      #     password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      # - name: Build and Push Docker Images for Next.js Frontend
      #   run: |
      #     docker build -t CNSt3.azurecr.io/frontend:${{ env.TIMESTAMP }} .
      #     docker push CNSt3.azurecr.io/frontend:${{ env.TIMESTAMP }}

      # - name: Build and Push Docker Images for NewsAPI
      #   run: |
      #     docker build -t CNSt3.azurecr.io/news:${{ env.TIMESTAMP }} ./backend/api/newsAPI
      #     docker push CNSt3.azurecr.io/news:${{ env.TIMESTAMP }}

  deploy_to_aks:
    # needs: build_and_push_images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials --name CNSt3 --resource-group FYP
      
      - name: Retrieve TIMESTAMP from build_and_push_images job
        run: |
          echo "NEW_TIMESTAMP=${{ needs.build_and_push_images.outputs.TIMESTAMP }}" >> $GITHUB_ENV

      - name: Print TIMESTAMP environment variable
        run: echo "TIMESTAMP=${{ env.NEW_TIMESTAMP }}"
        
      - name: Replace TIMESTAMP placeholder
        run: |
          sed -i "s/\${TIMESTAMP}/${{ env.NEW_TIMESTAMP }}/g" ./k8s/frontend-deployment.yml  
          sed -i "s/\${TIMESTAMP}/${{ env.NEW_TIMESTAMP }}/g" ./k8s/news-deployment.yml
      
      - name: Print news-deployment.yml content
        run: |
          cat ./k8s/frontend-deployment.yml
          cat ./k8s/news-deployment.yml

      - name: Deploy to AKS
        run: |
          kubectl apply -f ./k8s/frontend-deployment.yml
          kubectl apply -f ./k8s/frontend-service.yml

          kubectl apply -f ./k8s/news-deployment.yml
          kubectl apply -f ./k8s/news-service.yml
